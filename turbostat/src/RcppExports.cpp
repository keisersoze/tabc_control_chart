// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hello
std::string hello();
RcppExport SEXP _turbostat_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(hello());
    return rcpp_result_gen;
END_RCPP
}
// bigSum
double bigSum(List x);
RcppExport SEXP _turbostat_bigSum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(bigSum(x));
    return rcpp_result_gen;
END_RCPP
}
// sumOfRanks
double sumOfRanks(NumericVector sample_R);
RcppExport SEXP _turbostat_sumOfRanks(SEXP sample_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sample_R(sample_RSEXP);
    rcpp_result_gen = Rcpp::wrap(sumOfRanks(sample_R));
    return rcpp_result_gen;
END_RCPP
}
// testA
NumericVector testA(NumericVector x1, NumericVector x2, int B);
RcppExport SEXP _turbostat_testA(SEXP x1SEXP, SEXP x2SEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(testA(x1, x2, B));
    return rcpp_result_gen;
END_RCPP
}
// testC
NumericVector testC(NumericVector x1, NumericVector x2, int B);
RcppExport SEXP _turbostat_testC(SEXP x1SEXP, SEXP x2SEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(testC(x1, x2, B));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_turbostat_hello", (DL_FUNC) &_turbostat_hello, 0},
    {"_turbostat_bigSum", (DL_FUNC) &_turbostat_bigSum, 1},
    {"_turbostat_sumOfRanks", (DL_FUNC) &_turbostat_sumOfRanks, 1},
    {"_turbostat_testA", (DL_FUNC) &_turbostat_testA, 3},
    {"_turbostat_testC", (DL_FUNC) &_turbostat_testC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_turbostat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
